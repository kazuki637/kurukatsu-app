rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ユーザープロフィール
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update, delete: if request.auth != null;
      allow create: if request.auth != null;
    }

    // ユーザーへのサークルメッセージ
    match /users/{userId}/circleMessages/{messageId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && request.auth.uid == userId;

      match /reads/{readerUid} {
        allow create, update: if request.auth != null;
        allow read: if request.auth != null;
      }
    }

    // サークル情報
    match /circles/{circleId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || 
         exists(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)).data.role in ['leader', 'admin']);
    }

    // サークルのメンバー
    match /circles/{circleId}/members/{memberId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (resource.data.role in ['leader', 'admin'] || 
         exists(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)).data.role in ['leader', 'admin']);
      allow delete: if request.auth != null && 
        exists(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)).data.role in ['leader', 'admin'];
    }

    // サークルの入会申請
    match /circles/{circleId}/joinRequests/{requestId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)).data.role in ['leader', 'admin'];
    }

    // サークルのスケジュール
    match /circles/{circleId}/schedule/{scheduleId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)).data.role in ['leader', 'admin'];
    }

    // サークルのメッセージ
    match /circles/{circleId}/messages/{messageId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid));
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)).data.role in ['leader', 'admin'];
      allow update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/circles/$(circleId)/members/$(request.auth.uid)).data.role in ['leader', 'admin'];
    }
  }
} 